<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
    使用mapper接口形式
    namespace：mapper接口路径
 -->
<mapper namespace="com.bbs.notice.mapper.NoticeMapper">
    <!-- 
        resultMap：自定义查询结果集
             type：结果集类型，可使用map、实体类
             id  ：自定义结果集唯一标识
     -->
<!--     <resultMap type="com.bbs.notice.model.DO.NoticeDO" id="notice"> -->
<!--         id字段 -->
<!--         <id property="noticeId" column="NOTCIE_ID" javaType="long" jdbcType="BIGINT" /> -->
<!--         一般属性字段 -->
<!--         <result property="message" column="MESSAGE" javaType="string" jdbcType="VARCHAR" /> -->
<!--         <result property="noticeType" column="NOTICE_TYPE" javaType="int" jdbcType="INTEGER" /> -->
<!--     </resultMap> -->
    
    <!-- 
        select：查询方法
            id：查询方法名称，如果使用接口映射定义，当前值须与接口中对应方法名称相同
            parameterType：查询方法参数类型，可以是简单数据类型，集合参数，实体类参数等
            resultMap：返回结果集类型，引用当前映射文件内已定义的一个结果集
    -->
    <select id="findNoticeById" parameterType="long" resultType="com.bbs.notice.model.DO.NoticeDO">
        select * from T_BBS_NOTICE where NOTICE_ID = #{id}
    </select>
    
    <select id="findNoticeListByType" resultType="com.bbs.notice.model.DO.NoticeDO">
        select * from T_BBS_NOTICE where NOTICE_TYPE = #{noticeType} 
        <if test="index !=0 or num!=0">
            limit #{index}, #{num}
        </if>
    </select>
    
    <!-- 
        insert：插入方法
            id：插入方法名称，如果使用接口映射定义，当前值须与接口中对应方法名称相同
            parameterType：插入方法参数类型，可以是简单数据类型，集合参数，实体类参数等
     -->
    <insert id="addNotice" parameterType="com.bbs.notice.model.DO.NoticeDO" keyProperty="noticeId" useGeneratedKeys="true" >
        insert into T_BBS_NOTICE 
        values(#{noticeId}, #{message}, #{noticeType}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{deleteFlag})
    </insert>
    
    <!-- 
        insert：更新方法
            id：更新方法名称，如果使用接口映射定义，当前值须与接口中对应方法名称相同
            parameterType：更新方法参数类型，可以是简单数据类型，集合参数，实体类参数等
     -->
    <update id="updateNotice" parameterType="com.bbs.notice.model.DO.NoticeDO">
        update T_BBS_NOTICE notice 
           set notice.MESSAGE   = #{message},  notice.NOTICE_TYPE = #{noticeType}, 
               notice.UPDATE_BY = #{updateBy}, notice.UPDATE_DATE = #{updateDate}
         where notice.NOTICE_ID = #{noticeId}
    </update>
    
    <!-- 
        insert：删除方法（此处delete方法仍然使用update语句，因此delete标签主要是用于标记区别）
            id：删除方法名称，如果使用接口映射定义，当前值须与接口中对应方法名称相同
            parameterType：删除方法参数类型，可以是简单数据类型，集合参数，实体类参数等
     -->
    <delete id="deleteNotice" parameterType="long">
        update T_BBS_NOTICE notice 
           set notice.DELETE_FLAG = -1
         where notice.NOTICE_ID = #{id}
    </delete>
</mapper>